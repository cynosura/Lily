<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<beans              xmlns = "http://www.springframework.org/schema/beans"
                xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
              xmlns:kauri = "http://kauriproject.org/runtime/1.0#springext"
            xmlns:context = "http://www.springframework.org/schema/context"
       xsi:schemaLocation = "http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                             http://www.springframework.org/schema/context
                             http://www.springframework.org/schema/context/spring-context-2.5.xsd
                             http://kauriproject.org/runtime/1.0#springext
                             http://www.kauriproject.org/schemas/runtime/springext.xsd">

  <context:annotation-config/>

  <kauri:module restletContext="restletContext" classLoader="moduleClassLoader" handle="module" conf="confRegistry"/>

  <bean class="org.kauriproject.runtime.rapi.ConfPlaceholderConfigurer">
    <constructor-arg ref="confRegistry"/>
  </bean>

  <kauri:export-service ref="hbaseConfiguration" service="org.lilyproject.server.modules.general.HadoopConfigurationFactory"/>

  <kauri:export-service ref="zooKeeper" service="org.lilyproject.util.zookeeper.ZooKeeperItf"/>

  <bean id="hbaseConfiguration"
      class="org.lilyproject.server.modules.general.HadoopConfigurationFactoryImpl">
    <constructor-arg><kauri:conf path="hbase"/></constructor-arg>
    <constructor-arg><kauri:conf path="mapreduce"/></constructor-arg>
    <constructor-arg value="${zookeeper:connectString}"/>
    <constructor-arg value="${zookeeper:sessionTimeout}"/>
  </bean>

  <bean id="metrics"
      class="org.lilyproject.server.modules.general.Metrics">
    <constructor-arg><kauri:conf path="metrics"/></constructor-arg>
  </bean>

  <bean id="zooKeeper"
        class="org.lilyproject.util.zookeeper.StateWatchingZooKeeper">
    <constructor-arg value="${zookeeper:connectString}"/>
    <constructor-arg value="${zookeeper:sessionTimeout}"/>
  </bean>

  <bean id="endProcessHook"
        class="org.lilyproject.server.modules.general.EndProcessHookSetup">
    <constructor-arg ref="zooKeeper"/>
  </bean>

  <bean id="connectionDisposer"
        class="org.lilyproject.server.modules.general.HBaseConnectionDisposer">
  </bean>

  <bean id="zooKeeperMXBean" class="org.lilyproject.util.zookeeper.ZooKeeperMXBean">
    <constructor-arg value="${zookeeper:connectString}"/>
    <constructor-arg value="${zookeeper:sessionTimeout}"/>
    <constructor-arg ref="zooKeeper"/>
  </bean>

  <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="beans">
      <map>
        <entry key="Lily:name=ZooKeeper" value-ref="zooKeeperMXBean"/>
      </map>
    </property>
    <property name="server">
      <bean class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/>
    </property>
  </bean>

</beans>
