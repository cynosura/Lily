#
# The purpose of this log4j configuration is to have some useful default for during developmnent.
#
# This file will be automatically loaded by log4j if it is in the current dir where Kauri is
# launched from.
#
# If you want to temporarily enable more logging for some category, you can do that using
# Kauri CLI options (see -h), without modifying this file.

# Avoid logging Kauri's default info logs twice to the console
log4j.additivity.org.kauriproject.runtime.info=false
log4j.additivity.org.kauriproject.runtime.classloading-info=false
log4j.additivity.org.kauriproject.runtime.classloading-report=false

# Log4j will only read the additivity settings for loggers which are actually mentioned here
log4j.logger.org.kauriproject.runtime.classloading-report=
log4j.logger.org.kauriproject.runtime.classloading-info=
log4j.logger.org.kauriproject.runtime.info=

# Our own logging
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%-5p][%d{ABSOLUTE}][%-10.10t] %c - %m%n

log4j.rootLogger=WARN, stdout

log4j.logger.org.lilycms.util.zookeeper.StateWatchingZooKeeper=INFO, stdout
log4j.additivity.org.lilycms.util.zookeeper.StateWatchingZooKeeper=false

log4j.logger.org.lilycms.util.zookeeper.LeaderElection=INFO, stdout
log4j.additivity.org.lilycms.util.zookeeper.LeaderElection=false

log4j.logger.org.lilycms.indexer.worker.IndexerWorker=INFO, stdout
log4j.additivity.org.lilycms.indexer.worker.IndexerWorker=false

log4j.logger.org.lilycms.indexer.master.IndexerMaster=INFO, stdout
log4j.additivity.org.lilycms.indexer.master.IndexerMaster=false

log4j.logger.org.lilycms.rowlog.impl.RowLogProcessorLeader=INFO, stdout
log4j.additivity.org.lilycms.rowlog.impl.RowLogProcessorLeader=false

# Avro's IPC reponder logs all user errors (thrown to the client) as warnings
log4j.logger.org.apache.avro.ipc.Responder=ERROR, stdout
log4j.additivity.org.apache.avro.ipc.Responder=false